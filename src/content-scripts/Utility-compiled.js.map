{"version":3,"sources":["Utility.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA,YAAY,CAAC;;;;;;AAEb,SAAS,aAAa,CAAC,IAAI,EAAE;AAC5B,KAAI,OAAO,GAAG,QAAQ,CAAC,sBAAsB,EAAE,CAAC;AAChD,KAAI,MAAM,YAAA,CAAC;;AAEX,QAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AACnD,QAAO,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;AACpC,OAAM,GAAyB,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC;AAC7D,OAAM,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACtC,QAAO,MAAM,CAAC;CACd;;;;;;;;AAQD,SAAS,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE;AACxB,KAAI,GAAG,GAAG,EAAE,CAAC;AACb,KAAG,OAAO,GAAG,IAAI,QAAQ,EACxB,OAAO,sBAAsB,CAAC;;;;;;;AAE/B,uBAAgB,KAAK;OAAb,IAAI;;AACX,MAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,CAAE,IAAI,CAAE,CAAC,CAAC;GAAA;;;;;;;;;;;;;;;;AACrC,QAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACtB;;;;;;;IAMK,YAAY;;;;;;;;;;;AAUN,UAVN,YAAY,CAUL,GAAG,EAAE,OAAO,EAAE;wBAVrB,YAAY;;AAWhB,MAAI,CAAC,GAAG,GAAO,GAAG,CAAC;AACnB,MAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,MAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;EAC1B;;;;;;;;;;;cAdI,YAAY;;SAoBX,gBAAC,KAAK,EAAE;AACb,OAAI,SAAS,GAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,AAAC;OAC1C,QAAQ,GAAI,SAAS,GAAG,IAAI;OAC5B,OAAO,YAAA,CAAC;;;AAGT,OAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;;;AAGnF,UAAO,GAAG,SAAS,GAAG,IAAI,GACvB,SAAS,GAAG,IAAI,GAChB,AAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,GAAI,GAAG,CAAC;;AAE5C,UAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,AAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,GAAI,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;GAClF;;;QAlCI,YAAY;;;AAwClB,SAAS,EAAE,CAAC,QAAQ,EAAE;AACrB,KAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC;AACxB,KAAG,SAAS,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC;AAC5D,KAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC;KAAE,OAAO,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;AAC/D,QAAM,MAAM,EAAE,EAAE,OAAO,CAAE,MAAM,CAAE,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAC;AACvD,QAAO,OAAO,CAAC;CACf","file":"Utility-compiled.js","sourcesContent":["/*\r\n * Copyright (c) 2016 Clint Priest\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"),\r\n * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\r\n * and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\r\n * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\r\n * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\r\n * DEALINGS IN THE SOFTWARE.\r\n */\r\n\r\n\"use strict\";\r\n\r\nfunction CreateElement(html) {\r\n\tlet DocFrag = document.createDocumentFragment();\r\n\tlet result;\r\n\r\n\tDocFrag.appendChild(document.createElement('div'));\r\n\tDocFrag.firstChild.innerHTML = html;\r\n\tresult                       = DocFrag.firstChild.firstChild;\r\n\tresult.parentNode.removeChild(result);\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Returns a string of the given properties, like propName: propValue\r\n *\r\n * @param obj\r\n * @param props\r\n */\r\nfunction dir(obj, props) {\r\n\tlet out = [];\r\n\tif(typeof obj != 'object')\r\n\t\treturn 'dir(): not an object';\r\n\r\n\tfor(let prop of props)\r\n\t\tout.push(prop + ': ' + obj[ prop ]);\r\n\treturn out.join(', ');\r\n}\r\n\r\n/**\r\n * Class which provides for timing and metrics / elapsed time with output\r\n *    controlled via delayed template literal\r\n */\r\nclass RateReporter {\r\n\t/**\r\n\t *\r\n\t * @param msg         Template literal which should be passed as a string, when reporting\r\n\t *                    the following variables are available to the template:\r\n\t *                        Count:            The count variable passed in to report()\r\n\t *                        PerSecond:        The Count / Second rate\r\n\t *                        Elapsed:        The time that has elapsed\r\n\t * @param options\r\n\t */\r\n\tconstructor(msg, options) {\r\n\t\tthis.msg     = msg;\r\n\t\tthis.options = options;\r\n\t\tthis.started = Date.now();\r\n\t}\r\n\r\n\t/**\r\n\t * Report the results of the timing\r\n\t * @param Count\r\n\t */\r\n\treport(Count) {\r\n\t\tlet ElapsedMS = (Date.now() - this.started),\r\n\t\t\tElapsedS  = ElapsedMS / 1000,\r\n\t\t\tElapsed;\r\n\r\n\t\t// Function to resolve template literal\r\n\t\tlet z = new Function('Count', 'PerSecond', 'Elapsed', 'return `' + this.msg + '`');\r\n\r\n\t\t// Show ms if less than 1 second, otherwise seconds rounded to two places\r\n\t\tElapsed = ElapsedMS < 1000\r\n\t\t\t? ElapsedMS + 'ms'\r\n\t\t\t: (Math.round(ElapsedS * 100) / 100) + 's';\r\n\r\n\t\tconsole.log(z(Count, (Math.round(Count / ElapsedS * 100) / 100) + '/s', Elapsed));\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts an iterable element to an array.\r\n */\r\nfunction $A(iterable) {\r\n\tif(!iterable) return [];\r\n\tif('toArray' in Object(iterable)) return iterable.toArray();\r\n\tvar length = iterable.length || 0, results = new Array(length);\r\n\twhile(length--) results[ length ] = iterable[ length ];\r\n\treturn results;\r\n}\r\n"]}